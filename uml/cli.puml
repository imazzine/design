@startuml devices
    node "GIT Server" as GITServer
    node "NPM Server" as NPMServer
    node "CI/CD Server" as CICDServer
    node "Coverage Server" as CoverageServer
    node "Producers' PC" as DeveloperPC
    node "Consumers' PC" as UserPC

    interface "Ethernet" as Ethernet

    GITServer "1" -( Ethernet
    CICDServer "1" --( Ethernet
    CoverageServer "1" --( Ethernet
    Ethernet )- "1" NPMServer
    Ethernet )-- "0..*" DeveloperPC
    Ethernet )-- "0..*" UserPC
@enduml

@startuml processes
    
    node "GIT Server" as GITServer {
        database "GIT Repo" as GITRepo
        node "GIT Service" as GITService
        GITRepo <- GITService: use
    }
    interface "GIT Service API" as GITServiceAPI
    interface "GIT Interface" as GITInterface
    GITService -- GITServiceAPI
    GITService -- GITInterface
    
    node "NPM Server" as NPMServer {
        node "NPM Service" as NPMService
        database "NPM Package" as NPMPackage
        NPMService -> NPMPackage: use
    }
    interface "NPM Interface" as NPMInterface
    NPMService -- NPMInterface

    node "CI/CD Server" as CICDServer {
        node "CI/CD Service" as CICDService
    }
    interface "CI/CD Interface" as CICDInterface
    CICDService -- CICDInterface
    GITServiceAPI )-- CICDService
    GITInterface )- CICDService
    CICDService --( NPMInterface

    node "Container Server" as ContainerServer {
        node "Continer Service" as ContainerService
    }
    interface "Container Interface" as ContainerInterface
    ContainerService -- ContainerInterface
    ContainerInterface )-- CICDService
    
    node "Coverage Server" as CoverageServer {
        node "Coverage Service" as CoverageService
    }
    interface "Coverage Interface" as CoverageInterface
    CoverageService -- CoverageInterface
    CoverageInterface )-- CICDService
    
    node "Producers' PC" as ProducerPC {
        node "GIT Client" as GITClient
        interface "GIT CLI" as GIT_CLI
        GITClient -- GIT_CLI

        ' node "NPM Client" as NPMClientP
        ' interface "NPM CLI" as NPM_CLI_P
        ' NPMInterface -- NPMClientP 
        ' NPMClientP -- NPM_CLI_P

        file "Source files" as Sources
        file "CI/CD Config" as CICDConf
        file "NPM Config" as NPMConfig
        GITRepo "0..*" o-- Sources
        Sources *-- CICDConf
        Sources *-- NPMConfig
        GITInterface )-- GITClient
        CICDInterface )-- CICDConf
        NPMInterface )-- NPMConfig
    }

    node "Consumers' PC" as ConsumerPC {
        node "NPM Client" as NPMClientC
        interface "NPM CLI" as NPM_CLI_C
        NPMInterface )-- NPMClientC
        NPMClientC -- NPM_CLI_C

        node "Node.js" as NodeJS
        NPMClientC --* NodeJS

        file "Binaries" as Binaries
        NPMPackage "0..*" o-- Binaries
        Binaries <-- NodeJS: run
    }
@enduml

@startuml
cloud "Internet/Intranet" {
    node "GIT\nserver" as gitServer {
        file "source \n code \n (.travis.yml, \n .gitlab-ci.yml)" as SourceCode
    }
    node "<b>CI/CD</b>\n<b>server</b>" as ciServer {
        node "Build Container (Docker)" as ciBuildNode
    }
    node "NPM\nserver" as npmServer  {
        package cli {
            file "server.js"
        }
        package plugins {
            file "cmd.js"
        }
    }
    interface "Webhooks + Bash + ..." as BashInterface

    SourceCode --( BashInterface
    BashInterface -- ciBuildNode
}
interface "GIT" as gitInterface
interface "NPM" as npmInterface

gitServer -- gitInterface
ciBuildNode --( gitInterface
npmServer -- npmInterface
ciBuildNode --( npmInterface

node "Leaders' Environment" as devPC {
    file "CLI Server \n sources"
    file "Plugins \n sources"
}
node "Developers' Environment" as userPC {
    component "NPM Client" as npmClient
    component "Node.js" as nodejs
    component "CLI Server" as CLIServer
    component "Plugable Command" as Plugin
    interface CLI
    nodejs <.. CLIServer: based on
    npmClient ..> CLIServer: use
    CLIServer .> Plugin: use
    npmClient - CLI
}
gitInterface )-- devPC
npmInterface )-- npmClient
@enduml